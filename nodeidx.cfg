; ================================================================= 10 Oct 1995
; Indexing system on raw ASCII nodelist (St.Louis/FTS-0005 format)
; Design & COPYRIGHT (C) 1993-1995 by Arjen G. Lentz; ALL RIGHTS RESERVED
; A project of LENTZ SOFTWARE-DEVELOPMENT, Amersfoort, The Netherlands (EU)
; -----------------------------------------------------------------------------
; Sample configuration file for NodeIDX Version 1.06 (NL format revision 1.00)

; The NodeIDX system was specifically designed for easy operation in multi-line
; situations. One or more applications may have a nodelist file open. You don't
; want to have to shut down all tasks to be able to process a nodediff....
; This is okay, provided your nodediff processor opens nodelist files in
; "Read-Only / Shared / Deny-None" mode. So find one that does this, or nag the
; author of the processor you're currently using to get his stuff upto date ;-)

; NodeIDX can work with plain St.Louis/FTS-0005 format nodelists, but also
; 'Point,1,....' entries, as well as 'BOSS,2:123/456' entries with points
; listed as nodes right underneith.
; I think that's just about all methods in existance ;-)

; In principle NodeIDX will only build a new index when something has changed.
; You can overrule this behaviour by specifying one or more domain names on the
; commandline. * or All forces building of all indexes.

; In addition to an *.Inn INDEX, NodeIDX will also create a *.Rnn REPORT with
; the comment lines from all the raw lists (plus statistics at the end), and
; a *.Gnn GATEWAY file (domain, nodenumber, region number on each line).
; The gateway stuff could be of use to XenEdit and netmail packers to find for
; instance the nearest uucp gate; unfortunately the nodelist contains much
; garbage (domain 'SDS'? Non-public uucp gates) so XenEdit doesn't yet use now.

; Old indexes+extras are automatically deleted by NodeIDX, so keep off.
; NodeIDX checks whether any application is still using an old index.
; NodeIDX notifies applications about a new index via a semaphore file.
; So, you do NOT need to shut down all your applications for a new index!
; Just run NodeIDX any number of times a day to get old stuff killed quickly.
; If nothing needs to be done, NodeIDX will just exit.
; New concept perhaps, but you'll soon get used to it.

; NodeIDX exits with errorlevel 0 for success (regardless of whether something
; was done), errorlevel 1 if an error occurred during processing, and
; errorlevel 255 if this NODEIDX.CFG contains some fault.
; Information is written to stderr and stdout, you may want to redirect stdout
; to a file to keep track of any problems.

; Delete old lists when no longer used in any index (only periodic, ie .* ones)
; Again, NodeIDX checks whether any application has the list open, or that the
; list is part of any index currently in use.
; If so, it'll leave the file there, and just check again during the next run.
DELETE

; To have NodeIDX create a userlist in the format: Full user name,address\n
; The domain name is omitted because the domain name is obvious from the
; domain index/userlist used, and can therefore be added by the application.
; The userlist can simply be search sequentially using pattern matching.
; This sounds slow, but turns out to be plenty fast in plain old C code.
USERLIST

; Now you can specify a number of domains, and their raw files for the index.
; First a 'NodeList' line with the name of the index, then the path to where
; the index should be stored, then your main zone number for that list, and
; then the filespec of the raw list itself. If you specify <name>.* instead of
; a full filename, NodeIDX will use the file with the most recent daynumber.
NODELIST FIDONET C:\XENIA\NODELIST\ 2	   C:\XENIA\NODELIST\NODELIST.*

; You can also specify raw lists replacing whole zones, regions or nets.
; These DelMerge statements may be nested.
; The synax is: first the name of the index (same as in 'NodeList' line), then
; the number of the zone:zone, zone:region or zone:net so NodeIDX knows what
; section needs to be replaced, and then the filespec of the raw list itself.
; If the specified section is not found, the section is added at the end of
; the specified zone.
;DELMERGE FIDONET		    2:24   C:\XENIA\NODELIST\REGION24.*
;DELMERGE FIDONET		    2:28   C:\XENIA\NODELIST\REGION28.*
;DELMERGE FIDONET		    2:283  C:\XENIA\NODELIST\NET283.*
;DELMERGE FIDONET		    2:47   C:\XENIA\NODELIST\REGION47.*
;DELMERGE FIDONET		    2:1000 C:\XENIA\NODELIST\POINTNET

; These are just items you want to add without replacing anything.
;MERGE	  FIDONET			   C:\XENIA\NODELIST\POINT283.*


; Other domains ...

;NODELIST BLABLA  C:\XENIA\NODELIST\   99	C:\XENIA\NODELIST\BLABLA.*
;DELMERGE BLABLA		       99:999	C:\XENIA\NODELIST\BLA1NET.*


; =============================================================================
